<launch>

    <!-- Define high-level arguments that can be passed to included launch file -->
    <arg name="use_ft_sensor" default="true" />
    <arg name="use_panda" default="false" />
    <arg name="use_simulation" default="false" />
    <arg name="calibration_type" default="dynamic" />
    <arg name="robot_ip" default="172.16.0.1" unless="$(arg use_simulation)" />

    <!-- Include the contact visualization launch file with passed arguments -->
    <include file="$(find virtual_tactile_pad)/launch/contact_visualization.launch">
        <arg name="use_ft_sensor" value="$(arg use_ft_sensor)" />
        <arg name="use_panda" value="$(arg use_panda)" />
        <arg name="use_simulation" value="$(arg use_simulation)" />
        <arg name="calibration_type" value="static" />
        <arg name="robot_ip" value="$(arg robot_ip)" unless="$(arg use_simulation)" />
    </include>

    <group if="$(eval arg('calibration_type') == 'dynamic')">
        <rosparam command="load" file="$(find virtual_tactile_pad)/config/controllers.yaml" />
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
            output="screen" args="position_joint_trajectory_controller" />
        <include file="$(find panda_moveit_config)/launch/move_group.launch">
            <arg name="load_robot_description" value="false" /> 
            <arg name="load_gripper" value="false"/>
            <arg name="pipeline" value="ompl" />
            <arg name="moveit_controller_manager" value="ros_control" />
            <rosparam command="load" file="$(find virtual_tactile_pad)/config/controllers.yaml" ns="move_group"/>
        </include>
    </group>
</launch>

 